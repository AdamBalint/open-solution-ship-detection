#project: USERNAME/PROJECT

name: airbus_ships_challenge
tags: [solution-1]

metric:
  channel: 'f2'
  goal: maximize

#Comment out if not in Cloud Environment
pip-requirements-file: requirements.txt

exclude:
- .git
- .idea
- .ipynb_checkpoints
- output
- imgs
- neptune.log
- offline_job.log
- notebooks

parameters:

  # Data Paths
  train_images_dir:     /public/challenges/kaggle-ship-detection/train
  test_images_dir:      /public/challenges/kaggle-ship-detection/test
  metadata_filepath:    /outputs/ships_metadata.csv
  annotation_file:      /public/challenges/kaggle-ship-detection/train_ship_segmentations.csv
  masks_overlayed_dir:  /output/masks_overlayed

  # Execution
  num_workers: 4
  num_threads: 4
  image_source: disk
  pin_memory: 1
  loader_mode: resize
  resize_target_size: 256
  pad_method: symmetric
  target_format: 'joblib'
  dev_mode_size: 500

  # General parameters
  image_h: 256
  image_w: 256
  image_channels: 3
  training_sampler_size: 2000
  training_sampler_empty_fraction: 0.0
  evaluation_size: 10000
  evaluation_empty_fraction: 0.52
  in_train_evaluation_size: 1000
  fine_tuning: 1

  # Network parameters
  network_output_channels: 2
  network_activation: 'sigmoid'
  architecture: UNetSeResNetXt

  # Training schedule
  epochs_nr: 10
  batch_size_train: 4
  batch_size_inference: 4
  lr: 0.0007
  momentum: 0.9
  gamma: 0.95
  patience: 10
  validation_metric_name: 'f2'
  minimize_validation_metric: 0
  reduce_factor: 0.5
  reduce_patience: 5
  min_lr: 0

  # Regularization
  use_batch_norm: 1
  l2_reg_conv: 0.0001

  # Postprocessing
  threshold_masks: 0.5
  tta_aggregation_method: mean
